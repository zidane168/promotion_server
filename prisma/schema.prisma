generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  id                 Int                  @id @default(autoincrement())
  enabled            Boolean              @default(true)
  created            DateTime             @default(now()) @db.DateTime(0)
  category_languages category_languages[]
}

model products {
  id               Int                @id @default(autoincrement())
  categoryId       Int
  title           String?            @db.VarChar(1024)
  videoLink        String?
  affiliateLink    String
  description      String?            @db.Text
  enabled          Boolean            @default(true)
  created          DateTime           @default(now()) @db.DateTime(0)
  product_comments product_comments[]
  product_ratings  product_ratings[]
}

model users {
  id               Int                @id @default(autoincrement())
  email            String
  phone            String
  enabled          Boolean            @default(true)
  created          DateTime           @default(now())
  product_comments product_comments[]
  product_ratings  product_ratings[]
}

model category_languages {
  id         Int        @id @default(autoincrement())
  alias      String
  name       String?
  categoryId Int
  categories categories @relation(fields: [categoryId], references: [id], map: "CategoryLanguages_categoryId_fkey")

  @@index([categoryId], map: "CategoryLanguages_categoryId_fkey")
}

model product_comments {
  id        Int      @id @default(autoincrement())
  comment   String?
  productId Int
  userId    Int
  enabled   Boolean  @default(true)
  created   DateTime @default(now()) @db.DateTime(0)
  products  products @relation(fields: [productId], references: [id], map: "ProductComments_productId_fkey")
  users     users    @relation(fields: [userId], references: [id], map: "ProductComments_userId_fkey")

  @@index([productId], map: "ProductComments_productId_fkey")
  @@index([userId], map: "ProductComments_userId_fkey")
}

model product_ratings {
  id        Int      @id @default(autoincrement())
  rating    Int      @db.SmallInt
  productId Int
  userId    Int
  enabled   Boolean  @default(true)
  created   DateTime @default(now()) @db.DateTime(0)
  products  products @relation(fields: [productId], references: [id], map: "ProductRatings_productId_fkey")
  users     users    @relation(fields: [userId], references: [id], map: "ProductRatings_userId_fkey")

  @@index([productId], map: "ProductRatings_productId_fkey")
  @@index([userId], map: "ProductRatings_userId_fkey")
}
